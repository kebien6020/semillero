{"version":3,"names":[],"mappings":"","sources":["pipe_basin_detail.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\n$('.success-panel, .error-panel').addClass('alert fade in');\n$().alert();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = flotAddLabels;\n\nvar _jquery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction flotAddLabels(plot) {\n    var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var _ref$xOffset = _ref.xOffset;\n    var xOffset = _ref$xOffset === undefined ? 0 : _ref$xOffset;\n    var _ref$yOffset = _ref.yOffset;\n    var yOffset = _ref$yOffset === undefined ? -25 : _ref$yOffset;\n    var _ref$fadeIn = _ref.fadeIn;\n    var fadeIn = _ref$fadeIn === undefined ? false : _ref$fadeIn;\n    var process = _ref.process;\n\n    // Adapted from http://stackoverflow.com/a/2601155\n    _jquery2.default.each(plot.getData()[0].data, function (i, point) {\n        var o = plot.pointOffset({ x: point[0], y: point[1] });\n        var value = point[1];\n        if (process) value = process.call(null, value);\n        var $label = (0, _jquery2.default)('<div class=\"data-point-label\">' + value + '</div>');\n\n        $label.css({\n            position: 'absolute',\n            left: o.left + xOffset,\n            top: o.top + yOffset,\n            transform: 'translateX(-50%)' });\n        // Center\n        if (fadeIn) $label.css({ display: 'none' });\n\n        $label.appendTo(plot.getPlaceholder());\n\n        if (fadeIn) $label.fadeIn('slow');\n    });\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = plotYearAndType;\n\nvar _jquery = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _throttle = require('./throttle');\n\nvar _throttle2 = _interopRequireDefault(_throttle);\n\nvar _flot_add_labels = require('./flot_add_labels');\n\nvar _flot_add_labels2 = _interopRequireDefault(_flot_add_labels);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Returns a function that when called graphs the plot\nvar makePlotFn = function makePlotFn(data, $targetElem, color) {\n    // Map the data to the format flot requires\n    var series = [{\n        // Replace xcoord with serial number\n        data: data.map(function (d, i) {\n            return [i, d[1]];\n        })\n    }];\n\n    // Setup ticks\n    var ticks = data.map(function (d, i) {\n        return [i, d[0]];\n    });\n\n    // Flot's options object\n    var options = {\n        series: {\n            bars: { show: true }\n        },\n        bars: {\n            align: 'center',\n            barWidth: 0.5\n        },\n        legend: {\n            show: false\n        },\n        xaxis: {\n            ticks: ticks,\n            min: -0.5,\n            max: ticks.length - 1 + 0.5\n        }\n    };\n\n    // Setup graph color if provided\n    if (color) options.colors = [color];\n\n    // Sum of all ycoords\n    var sum = data.map(function (d) {\n        return d[1];\n    }).reduce(function (a, b) {\n        return a + b;\n    });\n    // Utility function\n    var percentage = function percentage(frac) {\n        return (frac * 100).toFixed(1) + '%';\n    };\n    // Wrap plot action in a function\n    var plotFn = function plotFn() {\n        var plot = _jquery2.default.plot($targetElem, series, options);\n\n        (0, _flot_add_labels2.default)(plot, {\n            yOffset: -15,\n            process: function process(value) {\n                return value + ' (' + percentage(value / sum) + ')';\n            }\n        });\n    };\n\n    return plotFn;\n}; /**\n    * Plot year and type on #year-plot, #type-plot\n    * using data from #plot-data in the form of\n    * {\n    *    byYear: [year data],\n    *    byType: [type data],\n    *    basin: [basin name]\n    * }\n    */\n\n\nfunction plotYearAndType() {\n    var colorLookup = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n\n    // Query the DOM elements we are going to need\n    var $yearPlot = document.getElementById('year-plot');\n    var $typePlot = document.getElementById('type-plot');\n    var $plotData = document.getElementById('plot-data');\n\n    // Obtain the plot data from the DOM\n    var serverData = JSON.parse($plotData.innerHTML);\n\n    // Lookup the color to use from the basin name\n    //\n    // If the color is not found it will be simply undefined\n    // and makePlotFn will simply ignore it for being a falsy\n    // value and use default flot coloring\n    var color = colorLookup[serverData.basin];\n\n    // Make the plot functions\n    var plotYears = makePlotFn(serverData.byYear, $yearPlot, color);\n    var plotType = makePlotFn(serverData.byType, $typePlot, color);\n\n    // Use them\n    plotYears();\n    plotType();\n\n    // Create custom throttled resize event\n    (0, _throttle2.default)('resize', 'tResize');\n\n    // Re-plot on tResize\n    window.addEventListener('tResize', plotYears);\n    window.addEventListener('tResize', plotType);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./flot_add_labels\":2,\"./throttle\":4}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// Create custom throttled events that only occur once per animation frame\n// Code from https://developer.mozilla.org/en-US/docs/Web/Events/resize\nvar throttle = function throttle(type, name, obj) {\n    obj = obj || window;\n    var running = false;\n    var func = function func() {\n        if (running) return;\n        running = true;\n        requestAnimationFrame(function () {\n            obj.dispatchEvent(new CustomEvent(name));\n            running = false;\n        });\n    };\n    obj.addEventListener(type, func);\n};\n\nexports.default = throttle;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nrequire('./app');\n\nvar _plot_year_and_type = require('./modules/plot_year_and_type');\n\nvar _plot_year_and_type2 = _interopRequireDefault(_plot_year_and_type);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(0, _plot_year_and_type2.default)({\n    'LLANOS ORIENTALES': '#edc240',\n    'PUTUMAYO': '#afd8f8',\n    'CATATUMBO': '#cb4b4b',\n    'VSM': '#4da74d',\n    'VMM': '#9440ed'\n});\n\n},{\"./app\":1,\"./modules/plot_year_and_type\":3}]},{},[5]);\n"],"file":"pipe_basin_detail.js","sourceRoot":"/source/"}