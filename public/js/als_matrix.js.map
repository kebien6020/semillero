{"version":3,"names":[],"mappings":"","sources":["als_matrix.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nrequire('./app');\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = (typeof window !== \"undefined\" ? window['ReactDOM'] : typeof global !== \"undefined\" ? global['ReactDOM'] : null);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _AlsMatrix = require('./components/AlsMatrix.jsx');\n\nvar _AlsMatrix2 = _interopRequireDefault(_AlsMatrix);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _JSON$parse = JSON.parse(document.getElementById('matrix-data').innerHTML),\n    criteria = _JSON$parse.criteria,\n    alternatives = _JSON$parse.alternatives;\n\n_reactDom2.default.render(_react2.default.createElement(_AlsMatrix2.default, { criteria: criteria, alternatives: alternatives }), document.getElementById('matrix'));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./app\":2,\"./components/AlsMatrix.jsx\":3}],2:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar $ = (typeof window !== \"undefined\" ? window['jQuery'] : typeof global !== \"undefined\" ? global['jQuery'] : null);\n\n$('.success-panel, .error-panel').addClass('alert fade in');\n$().alert();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AlsMatrix = function (_React$Component) {\n    _inherits(AlsMatrix, _React$Component);\n\n    function AlsMatrix(props) {\n        _classCallCheck(this, AlsMatrix);\n\n        var _this = _possibleConstructorReturn(this, (AlsMatrix.__proto__ || Object.getPrototypeOf(AlsMatrix)).call(this, props));\n\n        var _this$props = _this.props,\n            criteria = _this$props.criteria,\n            alternatives = _this$props.alternatives;\n\n        var answers = criteria.reduce(function (arr, criterion) {\n            if (criterion.type === 'multi') arr[criterion.id] = criterion.valueFunctions[0].data[0][0];else arr[criterion.id] = '';\n\n            return arr;\n        }, []);\n\n        _this.alternatives = [];\n        for (var alternativeId in alternatives) {\n            if (alternatives.hasOwnProperty(alternativeId)) _this.alternatives[alternativeId] = {\n                id: alternativeId,\n                name: alternatives[alternativeId].name,\n                newTech: alternatives[alternativeId].newTech.split('\\n')\n            };\n        }_this.criteria = criteria.reduce(function (arr, criterion) {\n            arr[criterion.id] = {};\n            if (criterion.type === 'multi') arr[criterion.id].options = criterion.valueFunctions[0].data.map(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    x = _ref2[0];\n\n                return x;\n            });\n            arr[criterion.id].name = criterion.name;\n            arr[criterion.id].type = criterion.type;\n            arr[criterion.id].weight = criterion.weight;\n            arr[criterion.id].id = criterion.id;\n            arr[criterion.id].valueFunctions = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = criterion.valueFunctions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var func = _step.value;\n\n                    arr[criterion.id].valueFunctions[func.id] = func;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return arr;\n        }, []);\n\n        _this.state = {\n            answers: answers,\n            showTable: false\n        };\n\n        _this.handleShowTableChange = _this.handleShowTableChange.bind(_this);\n        _this.handleAnswerChange = _this.handleAnswerChange.bind(_this);\n        _this.calcScore = _this.calcScore.bind(_this);\n        _this.interpolateIn = _this.interpolateIn.bind(_this);\n        _this.renderInput = _this.renderInput.bind(_this);\n        return _this;\n    }\n\n    _createClass(AlsMatrix, [{\n        key: 'handleShowTableChange',\n        value: function handleShowTableChange(event) {\n            var checked = event.target.checked;\n            this.setState(function (state) {\n                state.showTable = checked;\n                return state;\n            });\n        }\n    }, {\n        key: 'handleAnswerChange',\n        value: function handleAnswerChange(value, criterionId) {\n            this.setState(function (state) {\n                state.answers[criterionId] = value;\n                return state;\n            });\n        }\n    }, {\n        key: 'interpolate',\n        value: function interpolate(value, x1, y1, x2, y2) {\n            return y1 + (value - x1) * (y2 - y1) / (x2 - x1);\n        }\n    }, {\n        key: 'interpolateIn',\n        value: function interpolateIn(value, data) {\n            if (data.length <= 1) {\n                return 'Funcion valor incompleta';\n            } else if (value < data[0][0]) {\n                return 'Fuera de rango (Valor especificado muy bajo)';\n            } else if (value > data[data.length - 1][0]) {\n                return 'Fuera de rango (Valor especificado muy alto)';\n            } else {\n                var currentPoint = 0;\n                while (data[currentPoint + 1][0] < value) {\n                    ++currentPoint;\n                }return this.interpolate(value, data[currentPoint][0], data[currentPoint][1], data[currentPoint + 1][0], data[currentPoint + 1][1]);\n            }\n        }\n    }, {\n        key: 'calcScore',\n        value: function calcScore(criterion, alternative, answer) {\n            var data = criterion.valueFunctions[alternative.id].data;\n            if (criterion.type === 'multi') return Number(data.filter(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 1),\n                    x = _ref4[0];\n\n                return x === answer;\n            })[0][1]);\n            if (answer === '' || isNaN(Number(answer))) return null;\n            return this.interpolateIn(Number(answer), data.map(function (point) {\n                return [Number(point[0]), Number(point[1])];\n            }));\n        }\n    }, {\n        key: 'calcResults',\n        value: function calcResults(scores, weights) {\n            // util\n            var sum = function sum(a, b) {\n                return a + b;\n            };\n            var min = function min(arr) {\n                return Math.min.apply(Math, _toConsumableArray(arr));\n            };\n            var max = function max(arr) {\n                return Math.max.apply(Math, _toConsumableArray(arr));\n            };\n            var flat = function flat(arr) {\n                return arr.reduce(function (acc, v) {\n                    return acc.concat(v);\n                }, []);\n            };\n            var isNumber = function isNumber(v) {\n                return !isNaN(Number(v));\n            };\n            // Step 1: Scores - Provided as param\n            // Step 2: Normalize\n            var R = scores.map(function (row) {\n                return row.map(function (cell) {\n                    return cell / row.reduce(sum, 0);\n                });\n            });\n            // Step 3: weight\n            var normalizedWeights = weights.map(function (w) {\n                return w / weights.reduce(sum, 0);\n            });\n            var T = R.map(function (row, criterionId) {\n                return row.map(function (cell) {\n                    return cell * normalizedWeights[criterionId];\n                });\n            });\n            // Step 4: best and worse condition\n            var twj = min(flat(T).filter(isNumber));\n            var tbj = max(flat(T).filter(isNumber));\n\n            // Step 5: distances\n            var alternativeIds = scores[scores.length - 1].map(function (cell, alternativeId) {\n                return alternativeId;\n            });\n            var diw = alternativeIds.map(function (alternativeId) {\n                return T.map(function (row) {\n                    return row[alternativeId];\n                }).filter(isNumber).reduce(function (acc, cell) {\n                    return acc + (cell - twj) * (cell - twj);\n                }, 0);\n            }).map(Math.sqrt);\n\n            var dib = alternativeIds.map(function (alternativeId) {\n                return T.map(function (row) {\n                    return row[alternativeId];\n                }).filter(isNumber).reduce(function (acc, cell) {\n                    return acc + (cell - tbj) * (cell - tbj);\n                }, 0);\n            }).map(Math.sqrt);\n\n            // Step 6: Calc siw\n            var siw = diw.map(function (dw, i) {\n                return dw / (dw + dib[i]);\n            });\n\n            return siw.map(function (sw, i) {\n                return {\n                    alternativeId: i,\n                    score: sw\n                };\n            }).sort(function (left, right) {\n                return right.score - left.score;\n            });\n        }\n    }, {\n        key: 'renderInput',\n        value: function renderInput(criterion, answer) {\n            var _this2 = this;\n\n            if (criterion.type === 'numeric') {\n                return _react2.default.createElement('input', {\n                    type: 'text',\n                    id: 'input-' + criterion.id,\n                    name: 'input-' + criterion.id,\n                    placeholder: criterion.name,\n                    value: answer,\n                    onChange: function onChange(event) {\n                        return _this2.handleAnswerChange(event.target.value, criterion.id);\n                    }\n                });\n            } else {\n                var options = criterion.options.map(function (op) {\n                    return _react2.default.createElement(\n                        'option',\n                        { value: op, key: op },\n                        op\n                    );\n                });\n                return _react2.default.createElement(\n                    'select',\n                    {\n                        id: 'input-' + criterion.id,\n                        name: 'input-' + criterion.id,\n                        value: answer,\n                        onChange: function onChange(event) {\n                            return _this2.handleAnswerChange(event.target.value, criterion.id);\n                        }\n                    },\n                    options\n                );\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this3 = this;\n\n            var criteria = this.criteria,\n                alternatives = this.alternatives;\n            var _state = this.state,\n                answers = _state.answers,\n                showTable = _state.showTable;\n\n            var formGroups = answers.map(function (answer, id) {\n                var criterion = criteria[id];\n                return _react2.default.createElement(\n                    'div',\n                    { className: 'form-group', key: id },\n                    _react2.default.createElement(\n                        'label',\n                        { htmlFor: 'input-' + id },\n                        criterion.name\n                    ),\n                    _this3.renderInput(criterion, answer)\n                );\n            });\n\n            var scores = [];\n            criteria.forEach(function (criterion) {\n                scores[criterion.id] = [];\n                alternatives.forEach(function (alternative) {\n                    scores[criterion.id][alternative.id] = _this3.calcScore(criterion, alternative, answers[criterion.id]);\n                });\n            });\n\n            var scoreTable = null;\n            if (showTable) scoreTable = _react2.default.createElement(\n                'table',\n                null,\n                _react2.default.createElement(\n                    'thead',\n                    null,\n                    _react2.default.createElement(\n                        'tr',\n                        null,\n                        _react2.default.createElement('td', null),\n                        alternatives.map(function (alternative, id) {\n                            return _react2.default.createElement(\n                                'th',\n                                { key: id },\n                                alternative.name\n                            );\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'tbody',\n                    null,\n                    criteria.map(function (criterion) {\n                        return _react2.default.createElement(\n                            'tr',\n                            { key: criterion.id },\n                            _react2.default.createElement(\n                                'th',\n                                null,\n                                criterion.name\n                            ),\n                            alternatives.map(function (alternative) {\n                                return _react2.default.createElement(\n                                    'td',\n                                    { key: alternative.id },\n                                    scores[criterion.id][alternative.id]\n                                );\n                            })\n                        );\n                    })\n                )\n            );\n            var weights = criteria.map(function (criterion) {\n                return criterion.weight;\n            });\n            var ruledOut = [];\n            scores.forEach(function (row) {\n                row.forEach(function (cell, alternativeId) {\n                    if (typeof cell === 'string') ruledOut.push(alternativeId);\n                });\n            });\n            var filteredScores = scores.map(function (row) {\n                ruledOut.forEach(function (id) {\n                    delete row[id];\n                });\n                return row;\n            });\n            var results = this.calcResults(filteredScores, weights);\n            var listItems = results.map(function (r, i) {\n                return _react2.default.createElement(\n                    'li',\n                    { key: i },\n                    alternatives[r.alternativeId].name,\n                    ' (Puntaje TOPSIS = ' + r.score.toFixed(4) + ')'\n                );\n            });\n            if (Object.keys(listItems).length === 0) listItems.push(_react2.default.createElement(\n                'li',\n                { key: 'n/a' },\n                'Ninguna. Revise la tabla de puntajes, ya que todos los sistemas fueron excluidos por rangos operativos.'\n            ));\n            var recommendations = _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'h2',\n                    null,\n                    'Recomendaciones'\n                ),\n                _react2.default.createElement(\n                    'ol',\n                    null,\n                    listItems\n                )\n            );\n\n            var filteredAlternatives = alternatives.filter(function (alternative) {\n                return ruledOut.indexOf(alternative.id) === -1;\n            });\n\n            var newTechList = filteredAlternatives.map(function (alternative) {\n                return alternative.newTech.map(function (item) {\n                    return _react2.default.createElement(\n                        'li',\n                        { key: item },\n                        _react2.default.createElement(\n                            'strong',\n                            null,\n                            alternative.name\n                        ),\n                        ': ',\n                        item\n                    );\n                });\n            });\n\n            var newTech = _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'h2',\n                    null,\n                    'Nuevas tecnolog\\xEDas asociadas a las recomendaciones'\n                ),\n                _react2.default.createElement(\n                    'ul',\n                    null,\n                    newTechList\n                )\n            );\n            return _react2.default.createElement(\n                'form',\n                { className: 'form-3-9' },\n                formGroups,\n                _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(\n                        'label',\n                        null,\n                        _react2.default.createElement('input', {\n                            type: 'checkbox',\n                            checked: showTable,\n                            onChange: this.handleShowTableChange\n                        }),\n                        'Mostrar tabla de puntajes'\n                    )\n                ),\n                scoreTable,\n                recommendations,\n                newTech\n            );\n        }\n    }]);\n\n    return AlsMatrix;\n}(_react2.default.Component);\n\nexports.default = AlsMatrix;\n\n\nAlsMatrix.propTypes = {\n    criteria: _react2.default.PropTypes.array.isRequired,\n    alternatives: _react2.default.PropTypes.object.isRequired\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1]);\n"],"file":"als_matrix.js"}